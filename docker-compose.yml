version: "3.9"

services:
  fregepoc-redis:
    container_name: fregepoc-redis
    hostname: fregepoc-redis
    image: redis:latest
    networks:
      - fregepoc-main
    ports:
      - "16379:${DOCKER_REDIS_PORT}"
    profiles: ["services", "application"]
    restart: on-failure

  fregepoc-postgres:
    container_name: fregepoc-postgres
    hostname: fregepoc-postgres
    image: postgres:latest
    environment:
       - POSTGRES_USER=${DJANGO_DATABASE_USER}
       - POSTGRES_PASSWORD=${DJANGO_DATABASE_PASSWORD}
       - POSTGRES_DB=${DJANGO_DATABASE_NAME}
    networks:
      - fregepoc-main
    ports:
      - "15432:${DOCKER_POSTGRES_PORT}"
    profiles: ["services", "application"]
    restart: on-failure
    volumes:
      - fregepoc_postgresql_data:/var/lib/postgresql/data

  fregepoc-backend: &backend
    container_name: fregepoc-backend
    image: fregepoc-backend-image
    build: ./backend
    hostname: backend
    command: >
      sh -c "python manage.py migrate --noinput
      && python manage.py runserver
      0.0.0.0:${DOCKER_BACKEND_PORT}"
    ports:
      - "${DOCKER_EGRESS_IP}:${DOCKER_BACKEND_PORT}:${DOCKER_BACKEND_PORT}"
    depends_on:
      - fregepoc-postgres
      - fregepoc-redis
    volumes:
      - ./backend:/app
      - fregepoc_tmp:/usr/fregepoc-tmp/
    networks:
      - fregepoc-main
    profiles: [ "application" ]
    restart: on-failure
    env_file:
      - .env

  fregepoc-celery-worker:
    <<: *backend
    container_name: fregepoc-celery-worker
    ports: []
    command: >
      sh -c "python3 manage.py celery_dev_autoreload"

networks:
  fregepoc-main:

volumes:
  fregepoc_postgresql_data:
  fregepoc_tmp:
